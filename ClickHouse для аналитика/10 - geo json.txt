Описание задачи:

Решим задачу на агрегировании событий к большой агломерации. В нашем распоряжении есть таблица событий с координатами где они произошли. И есть вторая таблица с координатами 3 крупных городов.

Мы бы хотели собирать статистику таким образом чтобы события произошедшие в некотором удалении от больших городов на самом деле относились к ним. Для примера, мы открыли приложение в 30 километрах от Москвы, и город который нам был отображен будет отличаться от Москвы, но нам не важен этот небольшой город, мы бы хотели видеть статистику именно внутри большой агломерации.

Это зачастую важно для небольших приложений где большая часть пользователей из больших городов, и лишь небольшая часть находится за чертой.

Ваша задача объединить данные, отфильтровать все строки где расстояние не более чем 300 км. И далее найти город который находится ближе всего к данной координате. Тут вам может помочь агрегирующая функция argMin

Формат ответа:

В ответе указать сколько раз в конечной таблице встретился Выборг
--------------------------------------------------------------------------------
Создадим таблицу:

CREATE TABLE log_json(
  event String, 
  long Float64, 
  lat Float64
) ENGINE = Log
CREATE TABLE big_city (
  city String, 
  long Float64, 
  lat Float64
) ENGINE = Log

Наполним ее данными: 

INSERT INTO big_city (*) VALUES
	('Moscow', '55.755826', '37.6172999'),
	('Peterburg', '59.9342802', '30.3350986'),
	('Viborg', '60.7130803', '28.7577354')
INSERT INTO log_json SELECT * FROM url('https://raw.githubusercontent.com/dmitrii12334/clickhouse/main/geo', CSVWithNames, 'event String, 
  long Float64, 
  lat Float64');

--------------------------------------------------------------------------------

Моё решение:

WITH diff_table AS (
SELECT *, greatCircleDistance(long, lat, t2.long, t2.lat) AS diff
FROM log_json
CROSS JOIN big_city AS t2
WHERE diff <=300000)

,min_diff_table AS (
SELECT *, argMin(city, diff) OVER(PARTITION BY event) AS min_diff_city
FROM diff_table)

,event_city_table AS (
SELECT event, long, lat, city
FROM min_diff_table
WHERE city=min_diff_city)

SELECT COUNT(*) AS result
FROM event_city_table 
WHERE city='Viborg'

