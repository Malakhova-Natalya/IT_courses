Описание задачи:

Посчитайте прогноз выручки на 100 день жизни когорты для пользователей зарегистрировавшихся: 2023-01-01

--------------------------------------------------------------------------------

Моё решение:


WITH reg_date_table AS ( -- отбираем пользователей, зарегистрировавшихся 2023-01-01
SELECT uid, MIN(toDate(event_time)) AS user_reg_date
FROM login
GROUP BY 1
HAVING user_reg_date = toDate('2023-01-01')
) 
, event_table AS (  -- дата, номер дня, сумма выручки для этой когорты
SELECT user_reg_date AS cohort, toDate(event_time) AS dt, toDayOfYear(dt) AS day_number, SUM(revenue_usd) AS revenue
FROM reg_date_table 
LEFT JOIN finance f USING uid
WHERE is_test=0 AND revenue_usd > 0
GROUP BY 1, 2
ORDER BY 2
) 

, full_days AS (  -- добавляем список всех дней - чтобы заполнить пропуски
SELECT cohort, 
	   arrayJoin(range(MAX(toDayOfYear(dt)))) + 1 AS day_number
FROM event_table
GROUP BY  1
) 

, full_days_revenue AS (  -- когорта, номер дня, сумма выручки + пропущенные дни с выручкой 0
SELECT t1.* , t2.revenue  
FROM full_days t1
LEFT JOIN event_table t2 USING (cohort, day_number)
)

, predict_ml AS ( -- рассчитываем прогноз 
SELECT cohort,
       groupArray(day_number) AS X,  -- сворачиваем в массив
       arrayCumSum(groupArray(revenue)) AS y, -- считаем накопительную выручку
       arrayMap(x -> ln(x + 2),X) AS X_ln, -- формула, по которой считаем, можно задать любую другую
       arrayReduce('simpleLinearRegression', X_ln, y) AS coef, -- прогнозирование с помощью простой линейной регрессии

       /* Все последующие преобразования нужны для прогноза выручки на N день */ 
       length(X_ln) AS count_days, -- Считаем количество дней

       arrayMap(x -> ln(x + 2), range(length(X_ln) + 50)) AS days_predict, -- Применяем функцию к данным + 50 дней,
       
       tupleElement(coef, 1) AS coef_a,
       tupleElement(coef, 2) AS coef_b,
       arrayMap(x -> x * coef_a + coef_b, days_predict) AS array_predict
FROM  full_days_revenue
GROUP BY 1 
)

SELECT cohort,
       arrayJoin(range(count_days + 50)) AS index_days, -- Формируем список из 50 дней
       arrayElement(array_predict, index_days + 1) AS predict, -- Извлекаем из полчившегося массива дни
       arrayElement(y, index_days + 1) AS revenue -- Извлекаем из полчившегося массива выручку
FROM predict_ml
