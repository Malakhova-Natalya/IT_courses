# автогенерация задач

from airflow import DAG
from datetime import timedelta, datetime
from airflow.utils.dates import days_ago
from airflow.sensors.base import BaseSensorOperator
import numpy as np

default_args = {
    "poke_interval": 4,
    "timeout": 50,
    "mode": "reschedule",
    "soft_fail": True
}

class CustomSensor(BaseSensorOperator):

    def poke(self, context):
        return_value = np.random.binomial(1, 0.3)
        return bool(return_value)


# Здесь и далее код создание задачи-сенсора

dag = DAG('dag_685612281',schedule_interval=timedelta(days=1), start_date=days_ago(1), default_args=default_args)

tasks_list=list()
for i in range(1, 4):
    tasks_list.append(CustomSensor(task_id=f'task_{i}', dag=dag))
    # если нужно последовательное исполнение
    # if i:
    # task_list[i-1] >> task_list[i]
