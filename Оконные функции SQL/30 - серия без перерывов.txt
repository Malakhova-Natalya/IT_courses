Описание задачи:

🤔 Серия без перерывов
Есть таблица activity, которая хранит баллы, набранные пользователями в конкретные дни:

┌────────────┬─────────┬────────┐
│   adate    │ user_id │ points │
├────────────┼─────────┼────────┤
│ 2020-02-01 │ 51      │ 1      │
│ 2020-02-02 │ 11      │ 1      │
│ 2020-02-02 │ 51      │ 3      │
│ 2020-02-05 │ 21      │ 6      │
│ ...        │ ...     │ ...    │
│ 2020-02-25 │ 51      │ 1      │
└────────────┴─────────┴────────┘
Посчитайте острова по дате для каждого пользователя — то есть периоды, в которые пользователь набирал хотя бы один балл каждый день без перерыва. Серия из одного дня тоже считается.

Должно получиться так:

┌─────────┬────────────┬────────────┬───────────┐
│ user_id │ day_start  │  day_end   │ day_count │
├─────────┼────────────┼────────────┼───────────┤
│ 11      │ 2020-02-02 │ 2020-02-11 │ 10        │
│ 11      │ 2020-02-15 │ 2020-02-17 │ 3         │
│ 21      │ 2020-02-05 │ 2020-02-05 │ 1         │
│ 21      │ 2020-02-07 │ 2020-02-07 │ 1         │
│ 21      │ 2020-02-09 │ 2020-02-09 │ 1         │
│ 21      │ 2020-02-11 │ 2020-02-11 │ 1         │
│ 21      │ 2020-02-13 │ 2020-02-13 │ 1         │
│ 21      │ 2020-02-15 │ 2020-02-15 │ 1         │
│ 21      │ 2020-02-20 │ 2020-02-20 │ 1         │
│ 21      │ 2020-02-23 │ 2020-02-24 │ 2         │
│ 31      │ 2020-02-07 │ 2020-02-07 │ 1         │
│ 31      │ 2020-02-11 │ 2020-02-13 │ 3         │
│ 51      │ 2020-02-01 │ 2020-02-05 │ 5         │
│ 51      │ 2020-02-08 │ 2020-02-10 │ 3         │
│ 51      │ 2020-02-20 │ 2020-02-22 │ 3         │
│ 51      │ 2020-02-25 │ 2020-02-25 │ 1         │
└─────────┴────────────┴────────────┴───────────┘
Степик проверяет задание в MySQL, поэтому используйте функцию to_days(), чтобы преобразовать дату в число. Или вычитайте ранг прямо из даты — MySQL преобразует дату в количество дней автоматически.

Сортировка результата: user_id, day_start
-----------------------------------------------------------------------------------------
Моё решение:

WITH agroups AS (
SELECT user_id, adate,
    to_days(adate) - dense_rank() OVER w AS group_id
FROM activity
WHERE points >0
WINDOW w AS (PARTITION BY user_id ORDER BY adate)
)
SELECT 
    user_id,
    MIN(adate) AS day_start,
    MAX(adate) AS day_end,
    COUNT(*) AS day_count
FROM agroups
GROUP BY user_id, group_id
ORDER BY user_id, day_start
